<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="OnlineShopping" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OnlineShopping_T01_Homepage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-31 /v1/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">firefox.settings.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-34 /v1/buckets/main/collections/ms-language-packs/records/cfr-v1-en-US" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">firefox.settings.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/buckets/main/collections/ms-language-packs/records/cfr-v1-en-US</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-30 /v1/tiles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">contile.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/tiles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-35 /submit/messaging-system/undesired-events/1/e1d2b1e5-2bbe-44af-baa5-45343863361a" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
}��n�0&#x10;E���&apos;+R�%�K&#x11;��.&#x10;akaD�&quot;�&#x14;)������p�0&#xc;$)�ܹ�̃&apos;Aǉf;�OQܞD¸&#x3;&#x1d;|�~��&#x15;�׀}�&#x19;&#x12;v�&#x7;��&#x4;sp.,	�E�t3z=�[qm&#x16;���&#x11;L&#x8;�&#x11;DJ`���%&#x18;�3&#x1d;��U:̈́)&#xf;&#x2;����_&quot;��-3���&#x1d;&#x7f;&#xd;
|��cVY\&#xf;���ZNv�3ȺP��|�{{�&#x3;u:�&#x13;&amp;��&#x1d;��~;��#��Ȓ_u�E��.T%�r�IM&#x7;�dH�2&#x1b;�ඳ.�Z]����K.�]�k&#x10;k��o#VbOs���&quot;��)Xy&apos;���&lt;9��+\�=�����}j��&#x7f;�����{�Ϩ�b�&#x15;[k��&#x7f;ᇿ��c�&#x1d;&#x6;L&#x11;&lt;&#x1d;`��^	4&amp;��2�*TY��V�J��&#xd;v�f&#x6;s�&#xd;|��F�\&#x5;��&#xd;
�UE��T	�z�ʔT��,��&#x0;2��&#x19;�&#x2;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/messaging-system/undesired-events/1/e1d2b1e5-2bbe-44af-baa5-45343863361a</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-37 /update/6/Firefox/111.0/20230309232128/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.2604%20(x64)/ISET:SSE4_2,MEM:3961/default/default/update.xml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aus5.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/update/6/Firefox/111.0/20230309232128/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.2604%20(x64)/ISET:SSE4_2,MEM:3961/default/default/update.xml</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-38 /submit/firefox-desktop/newtab/1/1aa82341-af98-4e85-9bd5-25f0dbd0a55e" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��Rю�0&#x10;�&#x17;�^�l&#x8;!�&#x1b;����1&#xb;�&#xe;l�5M�S��k�����I&#x16;س�;�c��ٺAY�{ּ2��)���0�&#x10;U�&#x13;���&quot;/�(�,��h��I�M!؁��&gt;�&#x4;��&#x1d;1��f��E����&#xf;̌v;n�&#x11;F� ����E��&#x1d;;J+�,�R��u���&#x16;Pn�Z&#x8;���8�&#x7;�ۀQ�ũNǽ�����ӣ�-q�˺&#x12;\HZ�B4�zZ�D����Os�B�y���LA��~�zٹ條���@#h�&#x1d;�,Σ��&#x1f;&#x10;Ю&#x1e;H)�Y&lt;�	�&#x15;��\l&#x4;&#x13;��&#x1a;�y&gt;�ӑ������F�Z�xu,��(���˶2�	ڶj��l��&#x1a;\�vnH;&#x7;ר���&apos;��&#x0;ʐ&#x13;�&#xf;7�&#xb;N�#t����߇��&#x1b;=�&#x1a;�_�$��{&#x1a;�%�ٛ&#x17;��E�vp��%���#�#&#x1f;!M����İPpODz*�&#x3;%b��&#x2;�&#x7f;x��Hna�&#x1e;�V��&#xd;
&#x7f;����&#x17;�5&gt;�&#xb;&#x3;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/1aa82341-af98-4e85-9bd5-25f0dbd0a55e</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-39 /v4/threatListUpdates:fetch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$ct</stringProp>
                  <stringProp name="Argument.value">application/x-protobuf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyC7jsptDS3am4tPx4r3nxis7IMjBc5Dovo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$httpMethod" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$httpMethod</stringProp>
                  <stringProp name="Argument.value">POST</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$req</stringProp>
                  <stringProp name="Argument.value">ChUKE25hdmNsaWVudC1hdXRvLWZmb3gaJwgFEAEaGwoNCAUQBhgBIgMwMDEwARDGjhAaAhgKeQjMmiICIAIoARonCAEQARobCg0IARAGGAEiAzAwMTABEML5CxoCGAqhEGEaIgIgAigBGicIAxABGhsKDQgDEAYYASIDMDAxMAEQ2_ELGgIYCgTFmhAiAiACKAEaJwgHEAEaGwoNCAcQBhgBIgMwMDEwARDbzAwaAhgK_Y93QiICIAIoARolCAkQARoZCg0ICRAGGAEiAzAwMTABECAaAhgK2wQSxiICIAIoAQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/threatListUpdates:fetch</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Method-Override" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-40 /submit/firefox-desktop/newtab/1/be949359-fd96-4935-9912-e3939a783e96" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�6&#x10;�&#x17;��� %R�?�s��CQ&#x8;$5��Ȥ*R�&#x18;A��CYq�l6( �������&#x19;&gt;g�ucg���9&#xb;�o�&#x16;u}�BTK�=c�f9�&#xb;`&#x5;p��5���1�&#x16;,;d��_`�&#x1b;fA&#x15;�#��&#x1f;Q�.`&#x8;ֻ�r&#x13;�ӌ&#xb;1�&#x18;���?A�}?!&#x4;����)��O�V�!A���9&#x11;_$�2AmDqQi&#x1d;��)�&#x7f;�	U�:/�A0� &#x4;&quot;�R�N�01Ԓ��Sz���&#x14;Ξ�&#x1a;�����&#x1c;��&#x1f;�	0�V�`�4�5�&#x1f;&#x1d;�2&#x1e;&gt;�+&#x19;&#x17;��&#x6;&#x18;�&#xd;
&#x10;�2�e��&#x17;yU��Y^�MGT�&#x1;�wѺ��&#xb;��3���&#xb;PU���&#x1b;&#x11;&#x12;7���I�&#x7;&#x7f;Q�^�h&#xd;
�`М�5&#x14;&#x12;�R&#x8;&#x10;%S�&#xb;-���Z��߫,��u����&#x17;�T�k)eO�a&#xd;
DӔT&#x1f;j_]�\&#x8;�&#x5;/��&#x4;�ۑ���L��n&#x1e;�8�&#x19;�r�B����Ni&#x1f;ɏ�1&apos;&amp;O&gt;�����?R��&lt;w��&#xe;&apos;�/��&#x2;����d}��&#x15;o8&#x13;ž��0O��=��N0�ّ&#x1d;����0ES�bN6�I6��S]v����o^��&#x1a;&#x14;/�&#x12;�&#x6;����&#xe;H^�LS�֕��2�%�nY]&#x5eb;��f&#xe;�&#x2;^ަr���Λ��&#x1;���X�=߶ߌʗje�6���ܘޮ�|�G�&#x10;��&#xb;Q�Sz�4�;d�43���&#x1f;���O���&#x1a;��䀩&#x1e;Gt�ux�&#x17;�H���Z��@���@��#YQC�N������&#x7f;��&#x1;&#x13;��a&#x1b;�&#x15;&#xf;�Q&#x1b;�`G�=y&amp;k&#x7;5&#x5;Z�~&#xe;ԟ�1g?�M�g�a�.��&#x8;C���}���ߐw&#x8;&#x12;���D�ل�2������&#x6;Q�&#xc;&quot;W&#x15;�B&#x1b;&#x10;J&#x15;�4j��.%�AU��mN��z��E�@�/���9k&#x19;��&#x1b;ד����7�&#xf;ؿ�ս����_&#x5;&lt;&#x1b;!9&#xe;XC1&#x14;4��,�&#x16;�.A�\�&#x15;M��/$���&#x0;���_{&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/be949359-fd96-4935-9912-e3939a783e96</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-41 /submit/firefox-desktop/newtab/1/ed084727-2c7d-4ddd-b84e-9d578bccbb98" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�6&#x10;�&#x17;�nF %��?�s��CQ&#x8;�&#xc;&#x1d;62��T6F�&#x7f;ߡ�8�n6X@����9:sy.f珣�6&#x14;��&quot;��š&quot;&amp;��1�&#x13;&#x16;��bU&#xd;�&#x6;�|eá&#x19;���P��@o&gt;�����5fA&#x19;��&#x8;�ߒTc�&#x18;]�#�f��&#x19;&#x17;B�)f&#x2;���E�(Ӻ h9MaM١&#x16;��=�$�K9&#x1e;䖞&#x16;���&lt;g&#x16;ޝ�&#x1a;��&#x11;\�4��?&#xc;�[ƅj�&#x6;ƻ&#x1a;D�iPM�`ꪫ��Y����宰�	L&#x8;fB������ �&#x11;!��ݐ��&apos;���О�3#�&#x1b;�4�!2L�&#x18;��&#x18;�&#x1a;�^TBh%x=|��&gt;LFI��;&#x1a;�P��}U7V�`&#xd;�&#x10;��Z*�����&#x1b;.+N�&#x1f;*�&#x19;%&#x19;&#x1f; &#x7f;��Kg�g�Aڄ&#xb;P�A�K&#x7f;īd�V���OX&#x1a;٢�&#x5;&#x3;�8��u&#x3;}+&#x4;��I�&#x12;}���e�&apos;G`�&#x19;O8�	�r&#x1e;�y&#x18;��\��e_V&#x4;$�y��=Nd^(XF����y���&#x11;�&lt;��眕���&#x15;,�&#x2;���&#xf;���������y&#x13;����=&#x4;!��E&#x7fb;�:&#xf;&gt;Y��vl&#x5;٭[b&#x1a;�ՏF�}�*`&#x1d;���b[�W?&#x1f;:F�M�WF���/�o�&amp;���^K+y&#xb;�hz&#x10;\J�Ej&#x7f;��&#x16;��TS�|Y+���\ל�\Lx��\^�,��J���d&#x7;F(&#xd;B�&#x1a;�AZ���Aae��ʸ�`�1�]&#xe;Cy&#x1f;N8�#��&gt;�&#x18;�3���j�|(����|&#x16;2&#x5;�&#x1b;�y�?�&#x1e;1�[�?:��9���1�#-�&#x2;�S���G*v&#x13;��&#x10;h4�v��~�T�8Fw�hhԊ��SD��0Gjk,�&#x1c;|&#xc;&#xb;y_	&#x1f;Ҳ����s����&#x6;&#x19;SX&#x1c;�&#x1f;���o�y&apos;��rq��}��K��4&#x17;&#x7;F&#x13;�&amp;�X�Un&#x17;^O!�y��{3&#x1e;&#x1d;U�(�,�&#x1f;�U-���tT�&#xd;
��k��V�`�^���&#x16;�ߗ�y�q�{&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/ed084727-2c7d-4ddd-b84e-9d578bccbb98</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-42 /submit/firefox-desktop/metrics/1/003b22ee-1781-4ddd-a9cb-b8c3f7e17b09" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��\Mo#Ir�/:���6��J�¾&#x19;�&#xf;��a&#x10;E�$�M�\~�����ݑ�&#x11;�&#x11;%��b`w�&quot;�UY�&#x11;�x��&#x1f;&#xf;���u�?��&#x1e;�&#x7f;&lt;\�&#x7f;&gt;&lt;[&#x1b;&#x1e;&#x1f;���r[������3ί�_���&#x19;���7&#x13;��yx|���/����8&gt;�2O��&#x11;���_/�n._��&lt;_�k�۵\��{����e�n�˼�N���~+&#x1f;l.�q�&#x6;_��In���T�~�L����s��q���_W�:���p(���&#xe;&gt;NƆM�ە�ٯB���&amp;�y��.�9&#xe;����ϟ�&#xf;/�?V��iw�W�����/��p[����V�&#x18;5���x��~= ���&#x11;M�n&#x13;c��`̴&#xd;
�`D&#x1b;�&#x1a;��B�n��c&#x1d;�m�~[�����������]M/����M���m:��&lt;��ǧ&#xf;��\&#xc;g7�y�Y�l�&#xd;
/&gt;��&#x14;�*$3��o&#x90;2|�����y{;&#x1d;v�i���o%�48&#x1f;_6p�&#x11;&#x6;&#x1a;�y�I0ov3��2D;9&#xb;#*c�&#x1e;��-&#xe;��|��������������r���S����z7�� �&#xd;�&#xd;
��7&#x3;�\����_8�e&#x7f;��֗��&#xe;��w+�W6q�� �&#x1f;�s&#x7f;ܝ&gt;�=L�3_�$	|!�њ��ò���&#x0;&#x1f;_`�ӵd�tپ�o�d&#x4;|�ǐ�)����|���&#x7f;�/�}�,k͓y����mSo����ఝ^&amp;�V9�a&#x15;�4A���0�y;�y�ɛ�&#x0;�W�j���Yn�����W&#x18;����鰇w�&quot;O}&gt;�N����߬�)������?&#x1e;&#xe;�������$&#x7;7��KpS^��f�&#xd;
��W�8�����&#x1c;^���n�ɶ��&#x11;��B��c�&lt;�N��~=�+&#x18;��a��&#xc;&#x16;��&#x2;k&#x0;&#x7;����u.q�4mo��g8p�&#xd;&#xe;��Q���&#x6;�[&#x7f;L���&#x19;&gt;�&gt;��&lt;��χӴ{:&#x3;�&#x15;�,�Y.�O��È!X&#x3;C&gt;L&#x1b;���Z&#xc;]�����^�L�C]�&#x1f;&#x10;&#x10;�&#x13;��9���&apos;]�/&#x1;0�&gt;_N��z]�&#x14;���Q�j&gt;� �&#x11;�&#x1;f&#x6;nŌC&#x19;�t��&#x0;&#x13;&#x10;�0��#�&#xf;&#x8;4��0&#x1b;�-ۇg������=,Ἓ6&#x15;��3�����6�_9�&#x8;_��&#x11;�&#x11;�5�o��&#x7f;���~\p&#x1e;o(�&#x10;§&#x1b;�)��&#x1b;��X�&#x1f;���l���;&#xd;
����A_�}}�o����\�z&#x3;i{�&#x1f;�ĉ�������s�Y���&#x4;&#x10;&#x4;	&#xc;&#x7;l�zG?&#x0;?_������&#xe;�xY_�&#x7f;�u������&#x2;d&lt;&lt;C&#x1c;��}{ac�7�4�;&amp;�&#x7f;����&#xb;!�+�s����t��C}&#x15;�m���N&#x14;]���خb&#x1d;��Y&#x17;��&#x0;H�E�ѷ�rl�C&#x1b;�5����lX&#x1c;�&#xf;�&#xe;xQ&#x1c;&#x6;&#xd;���ڋ�&#xd;k&#x18;G&lt;�qxE��&#xb;�&quot;&#xc;��i�#�e�s�E�C&#x1b;�M&#x1e;&#x7;F�g&#xd;&#xd;(�[��v&#x8;Lc;gr9f&#x1c;��ہ\jC�8w�f&#xe;����*&#xd;0�8���&gt;��&amp;&#x6;���lz7�|Љ|j�:����|���+B,�Ƅ&#x1;�&#x2;�&#x10;`yp1C&#x1b;s28�0��U�!��3�r�&amp;`�&#xe;G4&amp;[&#x17;�&#xd;9&#x7;&#xc;���ch�c�x&#x1;&#xb;g�&#x15;�&#x18;�y&#x8;&#x1;&#x17;#�mf�p�&quot;Ƅ	�2�&amp; ��&#x2;N��8G0ø�c�&#x15;�&#x14;{&gt;f&lt;�&#xb;&#x16;&apos;#&#xd;&#x3;�;}6�J�@+�&#x3;�&#x18;FW�&#x11;G�&quot;�&#x10;��&#x2;!e��@���&#x1a;���2DI;(G�m�w&#x18;86&#xf;�B 7��aL&#x19;������H	W�[\�&#x1c;,N&#x13;���&#x1c;��&#xe;&#x19;0������l.`�&#xc;�*8�&#x6;�&#x15;V&#x7;��&#x7;��&#x11;cf�&#x14;�&#x3;�&lt;&#x1e;���|?�n1&amp;̯�1�&#xc;��&#x4;����&#xe;4�&#x3;~�&#x1;�Z&#x1c;��&#x3;�&#x1a;J\&#x16;r���&#x1;���DFk@�`�S&#x1;S��&#x1d;�p�-��&#x19;&#x8;ԟ&#x7f;E�&#x0;�@ɷ&#x2;�O����R�i��T�����h��&#x1f; &#x1c;������i�6�&#xc;(�kM�K��a&#x12;\&#x1;D�X&#x10;�[&#xd;
��d&#x4;���ї5��&#x4;O�	&#xb;#.C��&#x1d;#��&#x8;��&#x1c;&#x1e;Db&#x17;�&#xc;2�]�6S&#x1;�&amp;	�.9[&#x12;5�/�c���H!�&#x7;&#x0;��ht�%&#xd;
�D.w&#x6;&#x11;W�:��&#x1;0�&#x12;]�	X��@�&#x10;[�13�0A�&#x4;��b&#x1d;uNp&#x7f;�V&amp;V&#x8;p�&#x12;N^r&#x1a;0a.pYf&#x2;���&#xc;��&#x1;�&#x2;�&#xb;���&#x3;���U�4�bc��&#x0;�b�t0�&#x16;�&#xd;
���0�&#x4;�6�zb&apos;&#x12;&#x18;h�x�B�����p�uyk��u!C�D�r?@X&gt;�[��U�侞�&#x11;��Ď�`�&#x1c;�&#x8;Y�&#x17;�1�J��J��	&#x16;�&#x11;�$[ѭ�&#x6;q&#x4;xB\���&#xd;
��\in&#x10;H&#x1c;���:h�E�D�q�&#x4;Pw&#x11;3�!&#x16;Jtu�!�&#xc;NVšBOc��3uj&#x11;��&#xc;Y�D&#x1e;&#xc;����0M&#x14;!8��k��&#x4;�2&#x7;�&apos;���&#x1b;$��V&#x1;S&#x1;H����&#x0;�n�S{�Tcn&#x3;�$a|E���(�ȇ�&#x1a;�&#x16;�eNG�&#x10;�m�5��&#x1e;&#x1; kr&#xb;{�3�&#x3;&#x17;�s��I/&#x1;5&#x16;��c1(!ʲ1�0P�@u�0P��-�B�&#x3;-�!�ǂ&#x8;5&#x1;&#x1b;c�W�&amp;L;&#x6;�&#x3;~.A&lt;J��n�|-f�&#x17;�f��H��&#x1b;JJ�4D�J�&#xf;C�)C&#x1a;S[��&#x6;&#x0;f	��r&#x6;&#x6;o�&#x1b;&#x5;?K�q;�_.&#x13;��b[&quot;&apos;&#x7;��&#x2;#�FƑ&#xc;b������h()&#x2;R|0Vj��a3���23&#xd;C�_N��f�?�!kǞ[�&#x10;j�ٱ&#x14;�&#x2;&#x1a;9d{�&#x4;���&quot;&#x1f;�H�&#x8;�L��%2&#x11;X�:��=���S)�&#x15;&#xe;C&#x1;&#xe;��H:�&#x0;�p��&#xe;����3]U&amp;@f)`&#x89;R�&#x7;�&#x13;&#xc;b/&#x2;Td�&#xe;=Y}&#x10;L �5D��&#x1c;t&#x2;cl&#x12;�,����&#x6;M�T��r&#x12;�\&#x16;,֩ϊ̲�B+�ʜ�ĭ&#x18;J�f��&#x16;��Dn�P��!��&#xd;
��&#xf;��&#xd;
un&#x1;,�=�@l&apos;3S�$�B�S&#x10;f�Qc&#x1b;&#x1;&#x1;��3#Pb�.&#x1e;�	(ZۤJ�DX,&#x11;��&apos;��Y&#x10;%ѫ�@#��v�/�F&#xd;
!v�S&quot;&#x1;*��	�, ��4&#x13;&#x2;��&#x12;&#xb;P&#x2;, &#xd;
\�]�񋽾Pw�`���&#x18;\�:`�3��S�&#x13;V&#x14;��8e]&#x11;a�ЋNh{.g1��$jVJ* ��i&gt;eP�T�&quot;&#x8;J&#x1e;�z�E�2�:U&#xd;
�&#xc;튵�z��&#x8;��`�%�2L&#xd;
��&#xd;
&#xd;�4�)��&#xc;�-&#x15;`&#x1d;BU]���B�&#x0;�@QIզRW*�����%8�K�A�&lt;@&#x1b;�X&#x5;&#x13;Q�R��qA6,�� a�]��B&lt;�&#x18;�&#x1c;�&#x1e;q&#xb;&#x14;�� �BP-��n&#x4;z�j5���&#x14;&#xb;d�&#x10;�x�I��I&#x1;��N�0.&#x4;&#x8;]&#x5;S&#xc;]dFӹ�	l+0��.+��tv��XO�/���0��.&#x18;&#x8;��&#xb;E8�@����Wڈ���[tm�&#x15;s�R&apos;X��&#x19;&#x17;R&#xc;�Y�_&#x875;�D&#x1c;Z},5az�h�(#V��&#x1;�&#x5;^&#x15;�&#x4;�4�mY&#x1d;Q5�&amp;�5&#xe;�u����n&#x1f;&#x17;�&#x5;��PW&gt;�z&#x12;\�&#x1;�&#xc;�~&#x12;&#x12;&#x5;�&#x0;� �&#x2;�+ �&#x1b;&#x1;e0Y��3&#xc;q&#x10;:�HӉ&#x14;Q%\���&#x14;���&#xb;HR�&#x5;M{�&#x3;&#xc;&#x1f;�&#x1f;&#x17;�(�� j%08`�=&#x1a;&#x14;��&#x6;�&#x19;��dA&#x17;ȝ&#x15;�/*&gt;�9�&#x10;m&#xb;&#xd;)�&#x1b;V&#x2;N�G���R��Le&#x6;��!Q&#x4;&#x0;�&#x3;��Q��4&amp;W���@����X��sk�}�+Xt� ��hE��ء�s&#xf;E��҅WR2&#x7f;g&#xf;��&#x10;;U�P&#x0;(�)^����̍�&lt;T��|&quot;Ҟ�&gt;	xҰ�t.�&#x14;��&#xc;&#x3;�����Ѻ�&#x10;��jEU}��G&#xe;7&quot;�����B&#x19;B�n$7&#x11;&#x18;&#xb;5�HT{&#x1c;&#x1c;��n��o�Aԣ�ã&#x14;�ݞd�f�!�&#x16;�j���|(j&#x18;Y�(k���H�[&#x14;٘�F�_�I&#x2;I)�Y;0��f#�΅T����A�h�&#x15;:�&#x8;y�l&#x6;Y&#x18;J��}&#x18;&quot;q���M��&#x0;!��&#x1c;(�������&quot;�՛�:Y�u�&quot;Ig��clO�S&#x8;?I&#x12;�e!ջ&#x2;�&#x1c;#Yl&#x14;&#xd;J6��Z�h��kC&#x2;�*�М8O{�B���ַ?���&#x5;Z�d:YVY�&#x1b;�&#x0;A&#x17;���&#x1c;��/t&#x1e;&#x97;&#x13;�YUG�[&#x17;zI*&#x1d;��&#x1d;�1&#xd;
�.Ut&#x7;�^f�x��&#x11;h_8&#x16;3&lt;[^ݪ&#x8;�Nr&quot;u&#x6;��&#x4;�&#x17;&#x1f;�W&gt;&#xe;&#x12;Vd&#xd;&#x1c;�^��Ny��^�MfV+p?؞�Y&#x14;���*�H�B&#x16;�J&#x0;e��ȫ�&#x4;T��dU�&#x5;63�Ga@xiQ��·FC��&quot;�&#x11;&#xb;��&#x14;�挰PDE�K&#xe;+��~���&#x19;�ȩcX`O��%��҆��&#x1a;8��FT��B6H&#x16;�q��R�m&#x7;N��&#x1;��XB���4v�&#x1d;�mbҪ�F�j&apos;�:&#x8;�,R���,����&#x4;�I i�$&#x9e;&#x1a;&#x19;d2���p�چ%Р�I��V&#x1a;&#x0;T�&amp;A&#x3;�2]o�&#x5;�N�������&#xb;&#x8;�*��g&#x6;&#x15;Q&#x14;e	ҳ�s��&#x5;G&#x8;~��u��&#x83;�$$����8V):�&#xd;
�$�V&#x13;r�5=��&#x12;HM�Uò��MD�&#xe;H�Ǹ�sK�DN��H&#x8;&#xc;M�Q�h��&quot;�N�\�n�&#x11;Zt�7�&#x10;���{��&#x18;B�&apos;UY���8r�:��H&#xd;
�X*�&#xd;
�!y&#x11;�6&#xc;9&#x1e;�(�~G&#x16;j��X�֚|*�&#x11;vp&#x6;&#x12;a��F6!�c&#x3;��g�	B�f&#x17;7�&#x4;�;A9v��L��=&apos;EQ2\�9i�&amp;�&lt;W��&#x13;�K�|GpFd�aK�AG&#xf;�K��f�KL:Iic�9&#x6;jO�`&#xd;�&#x17;�4&#x1;L�&#x10;�Cz�}ExP�D�&#x12;��&#x13;K��#��Ű(F�� i]N0s�_h&#x2;�E0�W&#x4;�0-&#x1c;�	!&#x12;}����&#x16;���A� ��N&#x14;Nz&#x16;�����ت-h�w��&#xf;&#xb;t&#x16;���&#x1c;�d?�/�O���!���pST&#x11;��,&#x18;��b���_&#x1e;�&#xd;e&#x17;v&#x16;�y�&#xd;
���p�hvKg����b��4-{���J��=P�M9;�W��[y��M+�&#x13;�&#xd;^0��&#x15;�Z��+���&gt;Ճ&quot;�u^�S�A!&#x6;�S)�F�`Y�*#��U^p�0��{�e�;�����&#x16;&#x5;��Ĕo�h���&gt;��D�N��z!�f�][�����A�&#x7;����w��&#xd;ē*a��&#x1e;��&#xc;�&#x15;�o{��%+��&#x0;��:a��X^�&#xf;�NV&amp;�DQ����.5�kQϴ�^�)c��+�@L� ����&#xe;TI�&#x1e;u�A%&#xe;{�Q@e�fnW���:��)���*�)�e�X��$�y�O�@&#x1f;�X&#xb;�n�Y�&#x15;�|���	�2\:&#xd;
&#x1d;���������*g�W&#x7;N4ԽH7&apos;��&#x17;��,@�.�=�&#x1b;�6&#x1e;�tm�3e&#x8;��B�z&apos;��(R�������)���58W&#x1d; D&quot;,��Re����u��&#x1a;&#xd;
&#xe;&#x15;���Z&quot;� Y�g�&#x7f;�&#x590;�Ap�U%�\�&#x16;ɝBj(I p\I&#x16;I&#x15;Jv(m��WQ��s!`$�+tVrB&#xb;1�j�(�&#x14;�R&#xd;&#x1d;&#x0;�&#x18;�&#x0;Ck9)&#x15;4&#x6;Jq�	Q��&#x16;&#x1;�ݕ �=#��ZE	&#x15;�D�&#x12;&#x11;J�(p�*�W�A���Q*�&#x14;_.T���L)a��Em͓�O))M��&#x17;(e�Rx�&#x5;�B��Uh&#x11;!�$��y/&#x18;:�}RWJx	E*E�P�&#xd;
���&#x14;����&#x19;|��|�A6���+&#x1b;D&#x14;�b��&#xd;
�/&#x1e;&#x18;�[�(?��!4&#x0;V��Qt5�!�����&#x0;Ŧ��æ&#x15;N�l&#x1e;�=i�uWn��1&#x14;�� &#x1e;;џ�X&apos;whp�sa�!gz�&#x7;��B�T&#xf;��&#x7;���.�h�rO��&#x2;&#x4;�&#x0;&#x1c;�,a|s�&#x11;&apos;�L�&lt;ãh�q�Q��dc���J�3��WL�&#x1f;E;&#x18;7�ޓ|4�{]Jfp?�U��-z&#x1f;�iMm�f���G���]�u�R�=�V&#xd;˶G�o&#x13;;D�e(�&#xd;
��T�LXQ���=����5�zDz����.&#x16;)�	�&#x6;e��NV�$�2E�&#x0;a&#x19;����w�ymJ�MQ��*��lt�Ae��íT�C��e��W�I��|8e&#xf;;�]V�_���w�}Ȑ㾡&apos;=g�r�_�ֻ��&gt;�v��4�`��B��򶶺&#x1;��1���a&#x16;ۏ���&#xd;
�Q���M�u���q��}�Go)Į�R&#xf;��&gt;�&#x6;&#x4;�W&#x14;�B��^�p���&#x3;j�h��&#x12;jT&#x1b;oi�eVY.�_&#x10;���&#x16;&#x1;�&#x17;a#&#x16;C&#x18;� .�JZ��A�C�􂥯k���!]Lv&#x19;Y�&lt;Fb&#x10;}0�&quot;�Cv�=&#x6;ʸ�ݲ(�(&quot;���&#xc;�BH�&#xd;
�&#x1a;�1&#x7;Cg��S�(&#x8;F&#x13;+&#x12;��&#xd;
֦�hI�=&#xe;�\̠w&#x12;&#x8;���:t�M&#x1a;#�^&#x3;��F&#x13;3H[L��&#x18;�Ǵ��_�&lt;Vw�W�}���r_&#x5;AB �+�	�&#x7be;�j7&#x3;��)�n&#x14;������M��� ,��wV&#x4;�Sc��z&#x1b;76&#xf;��ɨǖx�&#x5;v|&#x18;Tk[W(��U�[)t�Q�&apos;�����Y��@5&quot;��Q�i��&lt;`�Q�&#x1f;妕�K27K�F&#x10;u�!��&#x2;KGkdS��n�6�a�B=&#x13;pd�Q&#x16;X&lt;�T�2�65�@�\[&#xf;�d�&#x1;0p�&#x10;���e&#x7f;|m?&#xc;R~��&lt;G�?�O���6�������A�3&#x10;�����0�6��/&#xf;�&#x1d;���~��K���t(]�&gt;-&#x7f;�no&#x7f;uy����T&#x7f;����&#x8;~yJq�_&#x1e;�8�/�,��_�nw:�w��&#x7f;���O&#x7f;�&#xf;���ty}h�&#x7;����&#x1f;	?�o���s�G&#x5;k��F��Pʴo��pX���x����qW��O�_��V��&#x19;&#x1f;.��RhR�.�s�ð�t��&#xb;�����������f�AA���&lt;_@&#xc;ܦ�y��6&#x1f;��+�F���D.��h�$�&#x16;�+B&gt;J�vd�/�?R��8���������0�&lt;��B���&#xd;
E&#x4;&#x16;[(�P�7�@�h��&gt;AN&quot;3&#x1d;�&#x12;�-�8�&#xc;�&#x1f;ߌ Kr&#x1e;i�&#x1d;J.IC&#x15;$~d��I23���j�/��)IAW&#x7f;��ZV~]�{x���������㩅��������&#x7f;m?���e.��&#x2;��/���/#���7��������&#x2;����IH&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/metrics/1/003b22ee-1781-4ddd-a9cb-b8c3f7e17b09</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-43 /submit/firefox-desktop/newtab/1/512a27ca-07f0-4596-a132-ca7f34b034a2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�uQю�0&#x10;�&#x17;�^�l&#x8;&#x10;��^�G˘�X&#x7;6����)��5$��ԓ,�wgg��w�X7*�&#x6;��w��E#&#xe;&#xc;�&#xe;QE;&#x3;kY.򂋂��U�V�&#x17;Q��`&#x7;&#x6;��&#x2;�&#x7f;`&#x2;h�&#x10;�ϋw�&quot;���n&#x7;f&amp;�&#x1f;w�&#x8;&#x13;�&#x10;�Ua����N=��y�g��b]�/�7�[�&#xe;&#x2;ke#��*M�&apos;�&#x7;-+^&#x1f;�&#x13;?J��&#x1e;&#x6;ಫMSA��]I|zY�9k�`��@�&#x1a;�^�-.���_&#x10;�n���}XKw&#x16;�h�&quot;��)5�9�&#x8;&amp;�!e��T��Hu�t���ߎ&#x7f;&#x13;��w�U�c&#x1a;�M-���^&#x5;�����%�`&#x3;F&#x15;V�&#x0;�������9%�b�&#x6;�7��&#x1b;���%�.���S&#x1a;&#x4;ǿ&#x7f;#�{}�)C��&#xf;�&#xd;��	�&apos;��gX�&#x8;�&#x3;�j�=�����&#x1b;�&#xc;���&#x7;�&#x15;F&#x1f;,�z��&#x18;V� FH�e���/Hq��&apos;�&apos;�]ޢB;:�[r5�	��&#x7f;&amp;n��&#x1f;S�l,&#xb;&#x3;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/512a27ca-07f0-4596-a132-ca7f34b034a2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-45 /submit/firefox-desktop/baseline/1/6bd9b3c9-26de-498e-96cf-f5492d123e98" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�8&#xc;�&#x17;�N&#x19;H��K�`�&#xb;�AIt��#ge�mP̿/��&#x4;[,&#x6;&#x3;&#x18;�M��GG����!&#x1e;�&#x10;ǹ�&#x7f;T&#xb;�]훺&#x7f;���)&#xf;9���W��&#x15;&#x8;&#x5;�&lt;�~o�&#x1f;�앨�*���&#x1c;)����$�e���.�W*U�gJ\&#x15;�R�f\^��1���|��&#x12;&#x1d;��)AF&#xb;��@��i��&#xc;Z�&#x1a;�0�#�&gt;&amp;o�9aI�XJJ�?&lt;&apos;zl�)-`��@��@�h&#xd;�&#x11;HRY�5-��˹�&amp;��]&#x17;��U?&#x7f;&gt;U��&#xe;~��D�P&#x6;O#�S�ђ�W�&#xf;��&#x13;z��,�D| ����&#x18;&#xf;�&#x8;&#x4;��&#xd;Xc&#x15;t���vVK�o��~�k��0����&#x15;�Df�s&#x1;&#x6;�&#x1f;e&#x1a;!�m�&#x3;![�][�&#xd;&#x15;�Wu��t�n�o(s�&apos;oѽ�&#xd;
�o���L�]��h�&#x3;��P&#x13;�mX&#x19;i{���H�%3*��&#x14;����L&#x13;�(�˰����a*x��ջbѯ�I�pD�@�M&#x7;Z&quot;��F�&amp;��&#x1b;����K�|&#x1e;|X�&#x13;^�WJK�,.��&#x0;��&gt;(�X�(^�4q01#\�3�Ũ&#xc;�P��U-�,&amp;w&#xc;�\9b^&#x7f;�[&#x3;��3D?�&#x15;�Ɛ�&lt;�5&#xe;&#x1e;��4� Z��m&#xe;�&#x1e;_�o&#x5;�7?ς��&lt;?�_N|��^I&#xd;q=YJ�^�Ɔ�-2&#x6;�&#xd;n��N�Gu����+N����ݿ���&#x1e;(=K�Ɋ�&amp;�,�&#x1f;ܼ�\&#x1a;}�U�eXV{&#xd;
9��&#x1c;��M!royǉ�#���`��&#xd;�5l�&#x13;&#x1d;�]v7&#x1b;��O&#x1c;�&#x1b;u�-xm&#x1d;hD&#x5;}�#��1�Gl����&#x1d;C�X J;�&#x7;&lt;P1��z��m�^��jن�&#x0;��]�]&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/6bd9b3c9-26de-498e-96cf-f5492d123e98</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-46 /submit/firefox-desktop/newtab/1/3aa39370-1d5b-46d3-9e78-efab4731315c" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#x10;�&#x17;��� %��?�s��CQ&#x8;��d62��T&#x12;#ȿwh9�x7�. ��p��ᙋ^�źi�n��᥈�oq�z�+b�!&#xd;ɞ�8&#x14;%++`&#x15;��+g&#x7;V~a��bŮ@g~�&#x13;PF����S�j�&#x18;��n�،�` &#x4;�b&amp;���&#x8;#ʴ&#x6;&#x4;-�ٯ)&#x1f;� �&gt;&#x12;J&quot;���A^�S��&#x1c;]���&#x19;�j&#x18;&#x17;��&#x1a;&#x18;o+&#x10;u�A�&#x15;��ʶºce�)&lt;����ٓZ#l&#x7f;��+&#x1d;��&#x0;ڻd�j�&#x19;��i�c�&#x0;t&#x7;�G�&amp;�����`w&#x14;�?aid��&#x12;&#xc;F�&#x11;�X��5B�h�D^)�5�g,G�&#xc;�{3#DL`p����g��~�&#x15;�&gt;��}O��]Yգ���DT �j&#x14;&#x15;[�L�]�e�?c�&amp;&#x14;g�Je���&#x13;�dgT]׆j�$��o�����D)�V�W�&#xf;&#x12;]�&#x11;��Iϖ�n=�p�&#x13;�p&#x1e;�y&#x18;�j眧.��&gt;����ڝ���&#xd;���@p)��#ҵ[�7�T�j&#xd;
�Ժş�&#x19;�&#x14;/��#���d��*��*O&#xd;
�X_V%/��a�(�3&#x1d;&#x7;�&apos;#^���e�����o�A&#x1f;mB�&apos;���]34��O&#x1b;�-��֓�P&#x1c;8&#x15;��&#x15;��ȔCx�2&#x1a;&#x10;z�2&#x1a;��|��&#x12;�hCLCXݛ3�.�����d��YF�/���Y��b�I���&amp;����R�Q��&#x5;#�&#x6;!e&#x5;}/G���F1�Vi�q#��)�m;c?{Z&#x5;�&#x5;:��w�w�_W�&amp;��&#xf;狃T3��&#x12;1+�G7Y��%�G�nt~p������Dݬ�|K{�&apos;\�&#x1f;%&amp;��{*���3�&#x1f;0&#x3;n��&#x14;VܽYm&#x1c;��&#x1c;&#x1a;���0�9�-ō�G�q�.�@�1�`1&#xe;��%�D�����&lt;��y\�q[�&#x7f;Ѩ�b�&#xf;�i)&#xe;�&amp;��e7�Y&#x10;yY�z�&#x11;��1�V��R�M�&#x17;��^a͡m�&#x8;��F�-e��E�&#x1a;�Mm�W�ٿ_�&#x3;�..}�&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/3aa39370-1d5b-46d3-9e78-efab4731315c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-47 /submit/firefox-desktop/newtab/1/24b7de33-da78-4173-9cc2-dbe610df5822" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#x10;�&#x17;mo� %��?躷�(&#x4;&gt;F&#xe;&#x1b;�TI*�&#x11;��;�&#x14;�No�M&#x1;�&#xf;Ι3�G3�b��4X7���VD��8V}�P�$C&#x1a;�=cq,JVV�*��wΎ����cŊ�&#x2;��OL@&#x19;�#�×$�&#x10;1F��@���u�@&#xc;.�,`��`�7&#x13;B�&#x4;&#x6;G�L	&#x1e;�d��O&#x19;��t���&#x12;1��	r%JA�x��Y��g�D�&gt;V��OS��d(�ʮ��Q�`5�&#x10;��&#x1a;E�U����\��x&#x7f;&#x7f;�&apos;E��/	8cw��w�b���T��Qu]&#x1b;&#x10;5� ��&#x1;US�&#x13;�&#x10;Z	^��~&#x7f;��ܪ(��&#x4;��u�M&#x17;�&#x17;�A�	&#x3;���&#x1f;�;�U���w&#xf;�&#x17;�F6�+�`T�&#xc;&#x1a;�&#x1a;�F&#x8;&#x10;&#xd;��+%�������r6�&#x1f;&#x11;FzDK@�r���=��q�&#x1a;���&quot;+[M.V&#x8;�*�&#xd;
뎕�&amp;&#x1d;Y��,e]{&lt;�gL�2D�4��N��.&#xf;�!��&#x7;zm�N�Q�&#x6;ZQw ��d݈�$��&#x1b;T�U5��y&#x1e;��&#xe;&apos;J&#xd;
�/#����y���&#x19;C�z�s��B2�G�Pg&#x7f;���k�Fй��`�b=&#xd;G�uƿĝ�Cx�;V���J^v&#x14;|�`&#x1b;`p�Ya(��ں�n�!�!,n02�c[&#x2;k�7ׁ�&#x12;�8�[F&#x1e;��;��ίo�{A�f&#x1b;�^&#x7;7�7w�vH��&#x1;��:&lt;����l=y&#x7f;�qR�&#x17;��&#x15;&#xe;����&lt;ᠩ�ɇ&#xb;��I5a&#x6;�s��&gt;&#x13;��i��l���/?&#x7f;����&#x7;�t�e�,oń&apos;�/�k�&#x1c;n�A&#xd;
=�R�`�� �����&#x8;U��(F�*�2��Z�e���&apos;̷�*&#x1d;SX�����!ړCC�Y&#x1c;G9E�%?Gj�x��w�&#x7;�~ɾ&quot;~���&#x17;�&#xf;&#x16;���ݏ��7�&lt;.��-��hTh1�&#x1f;�y.��&amp;�ӹ�&quot;{+��&apos;&#x1f;��N����%��{o�+^��B/zZ|�&#x18;�ڪ���Y�T�4�y�����//&#x1;&#x1c;��&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/24b7de33-da78-4173-9cc2-dbe610df5822</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-48 /submit/firefox-desktop/newtab/1/c35cf852-d1e9-4ceb-9039-c87c757b0f4d" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#xc;~&#x17;ߞ2�l�v�&#x6;��&#x19;v1&#xc;�~(&#x5eb;#y��6(���4?]w&#x6;&#x1c;�Hb�����ȼ&#x15;���n�.&#x14;��&quot;��š�W&#xf;ELjN]&#x1a;�X&#x1c;���&#x15;�&#xd;
���ف�ߘ&lt;T�x(�����Q�����KR��&#x18;�&#x10;|Gw3��3!�&#x14;3&#x1;&#x17;^��`G��	,:��	&#x1e;�h�2O�E�ʛG�K���MP+P�U&gt;G?�q��_,y5�-+�4&#x8;&amp;&#x11;�@&#x4;]k��L�VrUr��NS��&#xf;G�Dؾ����b��&#x8;�B-3�Q�&#x18;��&#x13;&lt;jƅ��&#x1;ƛ&#xd;
�l&#xc;hY!تl*�-+&#x1b;�#&#x1e;I�&apos;0���/C:A&lt;y&#x3;�%���&#xd;
�Q�&#x1e;!�$~��&#x1d;�{�[�_�{�Lު&#x1a;M%&#x18;8ͩ�����B���B^i�����?��A��{^9&#x1f;:�A�Tk���RŘ&#x2;���T6j_ۊR&#x8;�&#x5;���*�9&#x1c;1ʜ�8&#x10;�E�	G&lt;b�O]�O�^�1Ǒ��e��i�&#x18;��Y��eU��@&quot;-~&#x1f;�&#xd;/q}�q�j&amp;3g���&#x19;&#x1e;G2�&#x14;LE���&lt;&#xe;	M�&#x11;&#x1d;��uW���&#x1d;�4��-&#x18;�+��&#x16;kc���q.&#xe;��+���2o�r���&#x8;ق�JQ�&#x1d;��&#x1b;��Q�FK��p�J�&#x3;�7��H�wF#��o�&apos;9�a���&#x17;��L�(�5���dSes&#x19;&#x7;�&#xe;n�_��vHNu��&#x1f;&lt;�yx&amp;���ƕ�]�;�&#x4;C&#x1e;}�Ot�^�&#x11;��e&#xc;4s���o�^�ሓ�����$�2�#чГJ5؜�&#xe;�&#x1a;�3�)�&apos;L�!vq�=Z&#x12;Nqpj�H2&#xb;S�&amp;��G�C��[{���a�[�&lt;Ψ���\.l��r��)�&#x3;�{h&quot;�,9��b�^���&quot;�ݭ@�0N��&#x1;+�&#x1;�T&#x5;��rP��D�T��^G&#x18;��e�&#x7;�&#xd;
-f�#8NŁ�ܮ��x�f�u��1D��c|���@u�&#x8;�9nP6́l�&#x4;Z�&#x15;(�&#x4;�qk�UF�w����?&#xd;
&#x7;}��&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/c35cf852-d1e9-4ceb-9039-c87c757b0f4d</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-49 /submit/firefox-desktop/newtab/1/c3c6ad85-4d83-4830-8d23-8c9078499aa9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�uR펣0&#xc;|��݂&#x12;&gt;&#xb;�q{��Q&#x8;�F&#xb;	&#x17;��U���9�voW])��&#x1e;Ϙ1�l1v��&#xe;���&#xc;�7k�80&#xc;�&#x7;&#x19;�&#xc;�e&#x19;���(_&#x5;oy���6������1Y��xP�,!��&#x17;g�&#x6;�3�]&#xf;LOf&#xf;w�&#x0;&#x13;�&#x10;�Eb�&amp;��L=��Y����!E����&#x19;�P�&#x1;�f�&#x16;|��e���������&#x14;B�{}2&#x1;tX}��ﱒUq��&#x6;�I]�&apos;&#x13;��v�&quot;~&#x1e;�y��ȎT&lt;��&#x0;i&#x5f9;&#x3;�Z��&lt;�=٫&#x10;�DS�&#xb;:��܋�e{&#x12;�`&lt;&#x6;�W{&#x7;�N��:&#x11;����Kq���ՠD��EyL&#xd;
�T��&#x1;&#x12;�պ���ꮌ�F&#x1b;��m�t�c�Y8&#x7;ե��j�Z`��?H���_R� ��&#xd;��	�&#xf;��Ͱ�&#x11;��H�s�&#x1c;�Qkq�&#xd;BjP�&#x19;-��d�&#xe;jBx�!ĵ���6����-H�¯�&#x1b;�wh�_&#xb;�&apos;��}&#x1f;u&#xc;�&#x1b;�ϸ���&#xf;&#x3;EMg&#xb;&#x3;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/c3c6ad85-4d83-4830-8d23-8c9078499aa9</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-44 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-50 /submit/firefox-desktop/baseline/1/120a0b44-5276-4be0-ae7e-8be3e00d4db5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�8&#xc;�&#x17;�N&#x18;H��K�`�&#xb;�AIt��#ge�m0�&#x7f;&#x1f;�i3�LQ&#xc;`؀�C&#x1e;�C�{u	�8�8���{���աQbW-&#x19;S&#x1e;r8Su�jQ+&#x10;&#xd;
�y�� �o�&#x1c;��v&#x15;E�yL��c&#x12;�2G�@��&#x13;&#x15;�˅&#x12;�b^Jь�#�9�&#x10;א��\�&#x3;&#x1c;3%�h��0&#x1e;	�&lt;M�A���	�;qҏ�[򜰄P,�R�&#x1f;ρ&#x1e;&#x1b;rJ&#xb;&#x18;�$У2�5Z�n&#x4;�TVwM��|��nb8�u�ۧ��cW��&#xb;�y�&#x13;�B&#x19;&lt;��N�NK���J?|�&#x5;!�5�x�F �o�&#x1a;���t���Z��&#xf;B��bt�&apos;o�=~��م\J&#x3;~A�ŮVf�,�a�4&#x11;؆)I�&#xb;=vFb-������&#x16;&#x18;�Ԛ&#x8;&#x1c;&#x7b8;�&#x5;�O3�~��&#x8;�m#&#x1d;&#x8;�*��u��&quot;�n&#x15;�Nԭc&#x1e;���&#x2;��s�i�3�t&#x1d;&#x16;�8�5L%�������&#x18;Ғ����c~&#x1d;�&#x1a;D&#xb;����&#x6;z;�}+�&#x5;?&#xf;�&#x17;�&lt;߶7&#x7;�&lt;�տ!�������r��:&lt;QZ¶&#xb;Rʭ2&amp;w&#xd;
�\&#x11;�&#x7f;�t���-��`q��Lo�˶	%�Zղ�^&#xf;˦D��8q���]{&#x13;b��s8�l�զ&#x3;-&#x11;ysFb{[�7dmk&#xd;C�o�o����-�� y&#x4;&#xc;+[d&#xc;n[\7�1��b0#(�)&#x1e;�Hű�m��zp�&#x1c;-%c&apos;�L�&#xf;�G&amp;&#x1a;�O8&#x5;���ݗ�h&#x19;�՞C�����&#x14;&quot;&#xb;$wU���&#x7;]l.v��O2�r�4�郫&#xf;R�&#x1a;�I�5le&amp;:���ﳲ&#x7f;�&#x1d;j7�&#x1a;[��:Ј&#xd;
�&#x1e;GP]cH��Zg���&#x4;}y(�Q&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/120a0b44-5276-4be0-ae7e-8be3e00d4db5</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-36 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">push-notification</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">h6DgFqvkYK7jJ32Syh+AFA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-57 /submit/firefox-desktop/newtab/1/6aac2656-f092-4343-b928-e9a10bf88d70" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�uR�� &#x10;|&#x17;�^���?_�W�&apos;�x����eq���w�b��ԓ�&#xd;��;�,�l�&#x1b;&lt;k�&#x19;�O��Mq`&#x18;u�*�	X�2��\�\&#x16;�R�Y�&quot;�6&#x17;����_`�&#x7;&amp;�F�&#x8;a�4{&#x7;.&#x12;��l=03����G&#x18;a�&#x18;n&#xd;
�7�-v쩬Ȏ�15��\l&#x4;&#x13;��&#x8;&#x7f;ץ*O&#x14;�H�&#x1f;����	6Ϫ�8���~A@��K)�&amp;&#x1e;�&#xe;��1U|��k�\4Y�ɬ�&apos;�E;&#x7;#�&#x3;I�&#x8;�=&#x15;U�у�%�NE�ORk��&#x1;��*Ӕ�uUWP�ơz&#x1d;�|�T�&#xb;I�U�v[/ۗ��&#xd;&#x18;UX�&#x7;�Te\T\�&#xf;[���w��-S&#x7;���&#x11;���M6Z����{���v��&#xd;�&#x11;��F �1,p`&#xe;�QwG�d���ĢB{v�ӰX;�&#x11;�9���&#xf;���&#x5;T�zD?#&#xd;&#xe;�_ş&#x1d;�A��&#x19;&#x6;z�I�]��&#x1e;�%���o���&apos;��&#x19;�!��&gt;�6���&#x1;�&#x7f;�����&#x7;\&#x10;��&#xb;&#x3;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/6aac2656-f092-4343-b928-e9a10bf88d70</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-63 /submit/firefox-desktop/baseline/1/a0b5897e-a604-4f01-b1f9-eb6bf827c831" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;����n�&lt;&#xc;��ŷ&#xb;&#x3;ɖ|�&#x1b;|�&#x5;�K���D�#g��6(��kw�0�H&#x0;��&#x1f;�?�\]|8�&gt;LKux�&#x12;}�&#xe;m#wU�&#x18;����CU��&#x1;р�wR&#x1c;��ЇFT�����M�f&#x13;	�&#x12;�&#x2;m�&#xf;T��.&#x14;�+�T�^��9�D��H`q��5�&#xb;&#x13;1�&#x13;{f���=��#�{&#xd;
q��r��c�VHeZiAȮ&#x1;�;&#xb;F7&#x4;����t/�β{�^&#xd;
o�g�&amp;��U_��iy&#x2;�,n&amp;H��ф���Π��&#x1b;�_���&#x8;�a_7z2��&amp;P�&#x8;Lk�uf&#x10;j��ZnD&#x19;�=�%d&#x1f;V�����&#x2;N�&quot;d4`O&#x18;�&#x4;%6w��}@�h���9l�6J�d$�L���U&#xd;
T+�dcT�v�зW,)&gt;r�z��&#xf;@�;��v&lt;C�����Ar&#x7f;�^�JY�d3�&#x4;����&#xd;
��=G{�u��Δ�uL�~4��K&#x1e;]��}��&#xf;nyL��1�gC�:H���U&#x18;��g�E���Էc��	/��L ��Ǒ3`*�^��@1�M�Rl	&#x16;&#x16;z��-ˋ�+D�&#x1b;ш�njY�/�Χˌ�����&quot;�&#x10;&#x1d;��&quot;�N����&#x13;�}��_6�|Ly�kx5�D5�&#xe;d����]�D�[�P��)݃��,��X��&#x1d;Z2�3��Ζ6z�-�]&#x590;K��t�2�{&#xd;
G&lt;R������&lt;�{���Z@n��su�v��&#x3;ΞO���w�Ӳ�&#xf;�wR� s�u-���LG����d��Ae&apos;Uc&#x7;N&#x19;&#xb;&#xd;
��a�	��դ&amp;�5%،���������&#x3;�ƴ��ϙ�܆&apos;=����K&#x19;���A&#x16;�}&#x3;s&amp;��P&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/a0b5897e-a604-4f01-b1f9-eb6bf827c831</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-71 /submit/firefox-desktop/newtab/1/88a747dc-a519-48a3-9337-9d64b8873c3f" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#x10;�&#x17;�nh�&quot;u����ݢ&#xf;E!�2r�ȤJRI���ޡ�8�7���. �&#x10;gx�����&#x18;��w���ؽ&#x14;&#x11;�-v|[�&#x15;1ɐ�d&#xf;P슒��PNX���]�~�Վ��&#x0;g��&#x13;@F�0��S���&#x10;���ý&#x19;�y��&#x8;.�, ��@�wɺɦ#�G���&#x13;&#x4;�{���n&#xf;$�a�S&quot;��=*H���:y&#x6;OAΰ�1kt���H��Y~F��&#x19;&#xc;&#x1b;Y�悒^1 ��&#x15;ik!���&#x4;ƕh�8�����D҃LS&#x0;���JJ�S�&#xc;L��)&#x13;�f�P�p&quot;�F&#x13;Uq ��&#xd;���e�g&#x1d;�&#x7f;&amp;�{3&#x0;����^NC:���?�W�]&#xd;
�a��QUU&#x19;$����Ff�IۊR&#x8;�&#x4;�[�~}����&#x14;���(�&#x1f;�ǣ&#x1b;I�lK^�&#xd;
/��K&#x11;&#x0;D�(��-&#x15;}[1Y�/$�ΞNY�&#x1e;,��k&lt;�&#x0;&#x7;H��E�Щ�&#xe;��*7�&amp;��&#x1c;���8&#xe;��=Bȥ�a��9������&#x1;�d��&#x1e;��M�sA`&#xe6d;�Z���&#x14;�C(�ے��l1��?�3�)ί��t�{Z�&#xb;F禃�P�&#x18;&#x1e;�B�m��&#xb;��Lk&#xf;��6����[6�q�m(&#x16;&#x15;&gt;�)��ϧ��xsi��ղ��&amp;��Z&quot;���V=���֠T��&#x2;��6Z=7��&#x1e;�p��~��E��ѻ�&#x3;&#x18;�u�&#x6;@�&#x14;&amp;�[&apos;�&amp;B�ms&#x13;&#x1c;�~����7Ș|�&#x10;o����ﷱ�v�p�E��&#x1c;&quot;�9�)&#x1f;��&#x18;`/�qs��ͥ)R�^��!F(M���l��&apos;��+&#x10;�l�Vٔ���}�[���=�w���P��0�Ղ�u�&#x19;�}Ĭ�u��&quot;i����{l9E2�J{�&#xf;0�=�O�&amp;&#xd;&#x1e;�&#x17;�&#x11;���s&#xb;��2��&#x9b;���&#x1f;��X�(V�&#x1b;β;��y��&#x11;&#x1c;��.�~&#xd;
:���ٰ�bάݣ�;Z��H&#x5;&#x12;&#xd;夬+&#x1c;����!�5&#xd;&#xe;�Ɣ�?eaWrʦ�&#x12;�\� {&#x18;��&#x14;5z�]�&#xb;�s1��&#x13;.���KE��&#x3;&quot;?L��&#x3;]&#x1c;��#�&#x7f;@䷙�_{�7*o&#xb;P&#xf;&gt;^&#x17;�Op�}�&#xf;�@&#xc;�&#x17;	&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/88a747dc-a519-48a3-9337-9d64b8873c3f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-73 /submit/firefox-desktop/newtab/1/fee84bcb-2633-41f0-80ee-549d4fb09197" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#xc;~&#x17;ߞ*�l�/o��a&#x17;�`P&#x12;�hu$O��&#x6;E�}���Y{.&#xe;`$&#xe;���H}T^�ٺ�`���k&#x11;��b_��C&#x11;&#x13;�4${�b_���&#x18;����&#xb;�/�o��W�x(Й/0�&#x15;&#x13;&#x10;�w�p��@&#xd;&#x11;c��&#xd;&#x14;�3��&#x18;(�K1&#x13;���Od#BZ&#x2;2&#xd;�䗔&#x1d;*��Gʒ(_�x&#x6;kx&#xd;
��肟�l��&#x10;��B�Fh�E[1Y����Bf�����x�j&#xd;
O�9sw����._��&#x1b;9 &gt;2�]�n�����i&#x6;c���&#x7;���&#xe;�rI��$��x&#xf;�e�i��&#x1f;�&#x1b;hPW��Q	dr�j�5R2�p@Q)�5��r�/�xo&amp;d&#x11;&#x13;38�2�+-��y�~��5�-����3��kC���d�74NU�����ZIQ�?ct��Q�&#x1f;&#x7f;�$[�ʪ&#x1e;&#x15;&#xd;��aHD�&#x1a;*-T����&#x2;J��IfNz����&#x13;�0��&#x10;��&#x16;;�2u�+wY�&#x10;��&amp;�Y�d&#x7f;隡�d�qx&#x90;�KV�/�y�&amp;���&#x15;�˪&#x14;e�9���&#x4;��H!�POr/����縁��&#x1c;Nd&#xf;D&#x11;&quot;&#x16;&#x1f;��It&#x1a;F&#x10;&#xd;ke�1)&#x0;Hd#�$Z�7�T�j&#xd;
&#x19;m�i&#x8;�&#x1b;&#xc;�m3K�[&amp;��N�����o9�	=�9߯Ϸ����&#x17;��.&#x7;��&#x14;�b/h�5M6���uq#��C~���n�9=:���*b&#x1e;�&#xe;��:���&gt;Q���A&#x2;m��U�	q��f&#x1;5���&#x1c;�	g8���b�&#xc;�&#x1d;�?�J&#x15;3&#x5;u������&#xd;
��&#x11;�.��E&#x1f;�&#xc;1�`1&#xe;���),����q���&#x8;g)|�)�/�9���M�ϣ&#x7f;�n�]��9�I��D~YrG�ń&#x7;���U�[��ԣ,�eF*�$@��&#x1e;FVuM�r�Vi��0&gt;].�hU�b�?��\�9i�c�&#x17;��0`����#��-�N��&#x12;�&#xb;�W��&#x16;���&#x18;�&#x18;4�d�ˆ�Ѳ�DǛ�{#&#xd;
&#x7f;��&#x7;��&#x7f;��&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/fee84bcb-2633-41f0-80ee-549d4fb09197</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-107 /css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">family</stringProp>
                  <stringProp name="Argument.value">Lato:100,300,400,500,600,700,900,300italic,400italic,700italic,900italic|Dosis:100,300,400,500,600,700,900,300italic,400italic,700italic,900italic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subset</stringProp>
                  <stringProp name="Argument.value">latin,latin-ext</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-94 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">push-notification</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">S5w/x9GxK/AEFVtJCkdj0A==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-116 /?wc-ajax=get_refreshed_fragments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="time" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">time</stringProp>
                  <stringProp name="Argument.value">1678856407949</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/?wc-ajax=get_refreshed_fragments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-140 /update/6/Firefox/111.0/20230309232128/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.2604%20(x64)/ISET:SSE4_2,MEM:3961/default/default/update.xml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aus5.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/update/6/Firefox/111.0/20230309232128/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.2604%20(x64)/ISET:SSE4_2,MEM:3961/default/default/update.xml</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-143 /s/lato/v23/S6u9w4BMUTPHh6UVSwaPGR_p.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6u9w4BMUTPHh6UVSwaPGR_p.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-141 /s/lato/v23/S6uyw4BMUTPHjx4wXg.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6uyw4BMUTPHjx4wXg.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-146 /s/lato/v23/S6u8w4BMUTPHjxsAXC-q.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6u8w4BMUTPHjxsAXC-q.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-144 /s/lato/v23/S6u9w4BMUTPHh6UVSwiPGQ.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6u9w4BMUTPHh6UVSwiPGQ.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-145 /s/lato/v23/S6u_w4BMUTPHjxsI5wq_Gwft.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6u_w4BMUTPHjxsI5wq_Gwft.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-142 /s/dosis/v27/HhyaU5sn9vOmLzloC_U.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/dosis/v27/HhyaU5sn9vOmLzloC_U.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-139 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">push-notification</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">wyEVjeEWWgk7T2Epr3w/ig==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OnlineShopping_T02_SelectProduct" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-154 /submit/telemetry/57f74284-94ac-4ccf-86fe-287d44c68dd0/update/Firefox/111.0/release/20230309232128?v=4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�Wko�&#x12;�+�&gt;�&#x2;���e�(.���n�z����Ž(&#x2;Z&#x1c;٬�GIʏ.��;CɎ��n&#x3;$`�3&#x1c;��̙�W��jpFNSsf��s&#x4;����|&#x10;�i�&#xe;c��q��n������q������)`FT�LGN臑�Gn��ŏGQ8�&#x13;�?����kP&#x1a;&#x15;�Q|簺�&quot;�����T�&#x14;&#x6;2�(:d�&amp;n&#x12;�ɼ&#x11;�?��\?�a&#x14;&#x6;a�[%+H��P�W��� &#x8;&lt;�&#x1a;&#x17;��l��bc&#xd;%�&#x14;&#xd;
&amp;՟BJ�&quot;T4y��K�m�U��\��zIb���^�de	&#x12;�&#xd;
$0&#xd;�+��v�b�&#x1e;��h{�n�&#xc;�&amp;/&#xd;
֢j������&#xd;|������S&lt;�p&#x10;&#xc;&#x3;?��s&amp;&#x5;��n�8��&#xd;\&#x1e;�1t�E�p�r7J�&gt;�9&#x1b;̳9�&#xd;
�Z��,Ќ�k���x&#xb;�=�+d)b�&#xf;�,��&#x1b;&apos;q�&#xe;�&gt;�A�&quot;6�� J�W�$�&#x1f;���/B|&#x19;�+��&#x19;�&#x7f;&#x11;Ѷ&#x0;���	��&#x12;�iT&#x3;6�ʔ�&#x8;&#x1c;�g��7{t�Fʻ&#x13;��a���^ѥ�\�&#xe;�qbMpjg����2z�&#xd;&#x14;t�&#x2;�J�&amp;&#xf;�(&#x1a;&amp;&#x1;�#�i���-ɂ(&#xe;�� L17��ak����QΒ���W|6.f���&quot;&lt;����h�&#x14;�&#x4;G�N����^�4s躕&amp;�]�~&#x11;&#x18;��~���i|}&#x1b;&#x18;Ye�P��t?�P�A�E&#x6;&#x1f;Y����	/�T(�N�i&#xf;�&#x5;�)�&#x14;�`����֧��3&#xd;
&#x13;?�;-�M�ZU� �&#x8;e��@�j;&#xe;aˏ�F۹(��}��QȾ�&#x6;�&#x16;��,�����l�m:�9�/&#xd;
+�L�X�&#x18;\�`� �����x&#xf;�Kb�QΤF�&apos;&#x4;�s��eW�S`R��A�qVc&#x15;P�`��Δ�[�v�ч�a����q�&apos;���t/	�J�y�Z�6�ӄj&#x13;(P��?&#xc;H��9����(&#xf;|[����&#xd;#WbM�sĂ7&#x5;&#x17;E&#x12;�p&#x19;�&#x2;���&#xe;&#xf;K�&#x1d;�o&#x1a;W֡]:{7�;6�j���s2&#x1c;x!���{��2U�����&#xd;\$,*��&gt;~��&#xc;����&#x1c;��ɸ7e&#x1c;��7��&amp;q�?�&#xb;���x%I�?ë���x�~�&#x1e;A����[D�ʢ��� @4�,H�&#x15;���o�g&#xb;�b�N�*&#x1f;&#x16;��f{s�� G���C�����?��f��owXJ�@�l�&#x14;�&#x6;(�&#x8;n�T�!�&#x15;�&#x7;�Xb&#x7f;&#xb;�ԧ��&#x15;���zHPPkhx5n����9N5ة,wa��+-,_;eUR�^n&#x1e;;�(&#x17;��&#xd;&#x1a;h&#xd;
á{P&#xd;��GU��&#x7f;Sg&#x3;s� ��冊z&lt;��-���r!oݫ)&#x1b;�tAz��ol�&#x7;�&#xd;&#xf;�&#x13;\?&#xd;
B�&#x16;S��6&#xc;v&#x17;Dl�dʺnii�����ވ�Zt�K��ه&#x13;���JDHc&#x5;L�8ߚ(6&#x18;�%�&#x3;�&#x2;���&#x16;&#x1a;2;&#x94;�,B5��MD�*]�7��&quot;ݻ?�c�IY�;|&#xd;�ϑ&#x1a;7L�76�`&#x8;R&#x1b;�ã�8&#x18;&#x2;__&#x11;M&#x1a;iD�&#x6;�Q)���g�H�P�Q���{�Ec&#x14;���}}��,6M�&#xc;�p쀴�y~�&quot;h���-��r�mj�I$�&#x12;�����^O/AJ/[B�B &#x19;��ݹ�&#x4;&#x1a;�&lt;&#x5;��o|p.67�/�x&#x2;G��&#x3;�&lt;�QrΔ�p(z&apos;(&#x12;]B]��l�B�x�a����#:;^�)�J�a�Q��R\��&#x8;��^�v�3�?&#x1a;��t�X�6&#x1e;��&#x1e;+)q��7������&#x11;H%���J}��7[��O�&#xc;=�E�&#x0;.��(j&#x17;&#x7f;�/�a&#x12;{�i�\b9J938p&quot;[&amp;�A&#x14;&#x4;�`�w6�jS�_;���C���&#x7f;��;,w��녬��o�&apos;�*5�&apos;�x����&#x5;���&#x11;q&#xd;
&#x7f;4��]�e�QϿ�_e�&#x1e;�&#x1;�����U���&#x15;�D�QV�J�*�q?&#x1e;��[�OEmvW�K0�J�&lt;&#x1c;H�;oi���&#x1f;�X]��:�&#x1a;Z�[&#xd;
F)��Lg�?&#x15;�&#x17;Ff^�±J^0o0S�&#x1e;]&#x6;u嘵c$���6�¬\���5K(��.i-�˺$P�L�v4+����,�9�N�&#xd;�&#x1d;/�&#xc;k��&#x4;�UZ9�{&#x14;�~F���bZ�P��0ɚ&#x12;IHu�ݖO�+�Jj&#x7f;�Ĺ���B}F�B��W7��}&#xd;`��&#xb;Ρz&#x5;&#x15;&#x11;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/57f74284-94ac-4ccf-86fe-287d44c68dd0/update/Firefox/111.0/release/20230309232128?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 05:00:49 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-155 /submit/telemetry/a4b790af-18a3-49d2-8be8-4d2cd6d31f93/health/Firefox/111.0/release/20230309232128?v=4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
eQK��0&#x10;�/9&#x1b;����&amp;,���$���e�Li mJ&#x1a;EW��;U&#xf;�x	�{��̕�ˈ�f&#x1d;B�&#x1d;[0��&#x7;�YW&#x2;Z.K��TN���&#x1b;��+��m�Ik&#x13;B�qx�&lt;g(�4&#x17;���A�Z�Z���⋔&apos;L&#x13;	Ym&#x16;&#xc;�1x{7��� ��g����sY�&#x90;�9��v�+���VR�D&#xd;��ҭO����x&amp;�\&#xd;
B���&#x0;��&#x17;℃������C&#x0;�H�ۘ�W�y���4���0��Nv���a�@x&#x80;0!�Q&#xe;\B&#x4;7&#xf;&#x15;��}�������-&#x5;œ��7�&#x1;������&#x5;���&#x16;|��������&#x3;q�,o���w�C��(Xsg&#x1a;�&#xd;е����b���uc&#x1b;v�&#x5;��o_�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/a4b790af-18a3-49d2-8be8-4d2cd6d31f93/health/Firefox/111.0/release/20230309232128?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 05:00:49 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-153 /product/pink-drop-shoulder-oversized-t-shirt/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-152 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">push-notification</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">x53N9KcJyTDZOM+mDLpt4w==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-172 /s/lato/v23/S6uyw4BMUTPHjxAwXjeu.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/lato/v23/S6uyw4BMUTPHjxAwXjeu.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-171 /submit/firefox-desktop/newtab/1/5a8872ab-5af1-497d-9097-96bdaf0c0b13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��U�n�6&#x10;�&#x17;�ތA���?�soч�&#x10;��&#x1c;52��T&#x12;#�w(+��6�&#x17;&#x10;�̜�9�ꭘGw�G7�b�VD��؋�}(bR!�i&lt;b�/JV&#xd;
`&#x2;x���}�}c�^��@g&#x7f;�	��w�p����#�8zדm��:c &#xf;.�L ��&#x4;ƻ4�eL&apos;�&apos;g@&#xd;	&#x3;�-�G�&#xe;&#x8;�O�_&#x12;H�mtP�&lt;R�{��&lt;&#x5;�!�I��%�U5&#x1a;!&#x19;&#xc;�#�AT��R���B.�l���iΙ��&#x8;���|~(&#x6;�&#xd;
�{;!DL`qP˔��8���!�-�{כ�Z�;�����*&#xb;�b&#xd;
d�ՠ+-�me)�ђ�ne4��&#x8;&#x3;��&#x4;&#x4;�.�nI$�CʎA}Md��_&lt;jƥ��&#x1;�&#x1b;Ad&#x1a;C&lt;&#x4;�&#x15;e#�jY٘��̣��V��g&#x18;}&#xd;
ݨ�&#x14;ՠ��&#x15;�J&quot;���&#x4;\wL&#xe;m�Uɿ�U�d���]g&lt;�GL��G���e�r��ܕ�&lt;��&#x18;b���z��6�%�&#x6;x}&#x1d;���]ϻ�Q]����~}���&#x4;|&#x19;��/�&#x12;�w�Qc(���W&#x1f;��,[�&#x6;�khdՂ�J� &#xf;HY6��Q�FW����&#x19;C^�&#x1c;���U0�cB�;O�&#x5f6;�k�����}q8�8P�*�&amp;&#x7f;�:/-&#x13;�+E��v&#xd;@��/�7�&#x1d;�&lt;��m`�)2U6�q4��j�)��?go�0�������R�����&#xf;�8{&#x17;} ]L&gt;�&#x18;�&#x1a;(=!qJa!\�s����+���O�-�&apos;����&quot;�j�+���&#x5;���&#x3;�&#x1;&#xe;���&#x1c;�gj���ҩ��l�g�&#x10;&#x7;&#x1f;N�{�{�L�V&#x11;W&#xd;�����&#x1f;qV&#x7;�o�{&#x12;�&#xe;ݑ8x&#x7f;�&#x15;�`s&#x1b;�%&#xb;ߊ	&#xf;ʜv�&#x1;��N��f��j�Jm@*%���&#x0;��+��j���&#xd;
���&#x18;�A�B��^&#x4;ǹ�3��&#xf;��4r&gt;j=�f�&#x11;��&#x16;o�y&#x1e;�]&#x17;&#x2;o�E��*�&#x1a;�@��&#x3;��&#x5;���J�a&apos;͙(�y�&#x7;�����&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/5a8872ab-5af1-497d-9097-96bdaf0c0b13</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:50 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-173 /submit/firefox-desktop/baseline/1/2ad4974d-9d45-4353-8ce2-ddd877909912" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#xc;�&#x17;�6&#xc;$K��&#xf;�^`�&#x6;%щVG�d�mP��G9m�`�&#x6;&#x8;6l�&#xe;�!�V�|��&gt;&#xc;S�{+f�Y�jUn�9aL}�G*vE)J&#x5;B��&#x1e;�ؕ탨vJ&#x14;����§��D�y&#xd;
�6�g�Q�&apos;�&#x1c;&#x15;Ҝ�&#xe;�+�ir#�L	&#x1c;&#xd;��	�4�Ӓ@&#xd;
��L�`&#xf;��N!�m͓&quot;f&#x1b;��&#x13;~s�P�LUU&#xe;t%&#x10;t��`*��mu��5Z�������&#x7;&#x7f;4��Y�x&#x7f;�&#x14;&apos;7��a LK$�x�܂H�U�&#x5;&#x1;o�ܧ��V����BjSK&#xb;B6�A6��)&#x2;��FQՊ��+�/�9L�3h��&#x1f;�&#x6;�RU�&#x1;-*&#x2;����̘4��C[I,�(��&#x4;Y&#x1;&#x1f;&#x16;��0��&#x5;&#x1c;&#x12;EHh�&#x1e;0��*��W���&#x1f;&#x2;:��*-`0��&#xc;����&#x1a;t-��2���?&#x4;����=㴣�d&#x5f9;N4ґR&lt;��{����\�*��6���JEkq@YC��&#x16;�Dd�&#x3;1&#x15;��j2�1&#x15;�&#xc;&gt;Ω�K�&#x1d;���/A4 ���u&gt;�k&#x4;&#xb;��Q��z&#x1e;�&apos;;��গ�&#x2;�&#xf;��P,v���6&#x5;�N}�5��i&quot;w�sޢ����~�\?�g��_WM��/���&#x13;�&lt;������Z&#x17;���$�&#x15;Jt�*e�~&#x18;��O#�o3J�)��L����h&#x18;����&#x11;�&#x15;{F&#x17;��8zn�#��z��y1G�&#x12;�u&#x1e;&#x18;��&#x3;#��&quot;�K���Ϊ-�_=Fڣ=o��mo&#x5;Bm&#x7;]b&#x3;N&#x1b;&#xb;&#x1a;QA��&#x0;��+�&#x3;6ƚ&#xc;�&#x6;���&#x11;�-�=�)���r&#x19;��e��&#x17;)8 &#xb;u�����o�&#xf;�&#x12;��~��Cr&#x1e;�_R�&amp;�Q&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/2ad4974d-9d45-4353-8ce2-ddd877909912</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Wed, 15 Mar 2023 04:59:51 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/52.2.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-185 /wp-content/plugins/yith-woocommerce-wishlist/assets/images/ajax-loader-alt.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wp-content/plugins/yith-woocommerce-wishlist/assets/images/ajax-loader-alt.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-184 /wp-admin/admin-ajax.php" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">load_fragments</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8b7efca0cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">context</stringProp>
                  <stringProp name="Argument.value">frontend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][base_url]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][base_url]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][in_default_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][in_default_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][is_single]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][is_single]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_exists]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_exists]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][parent_product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][parent_product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_type]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_type]</stringProp>
                  <stringProp name="Argument.value">variable</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_view]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_view]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][browse_wishlist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][browse_wishlist_text]</stringProp>
                  <stringProp name="Argument.value">Browse Wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][already_in_wishslist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][already_in_wishslist_text]</stringProp>
                  <stringProp name="Argument.value">The product is already in the wishlist!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_added_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_added_text]</stringProp>
                  <stringProp name="Argument.value">Product added!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][heading_icon]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][heading_icon]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][available_multi_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][available_multi_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][disable_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][disable_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_count]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_count]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][ajax_loading]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][ajax_loading]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][loop_position]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][loop_position]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][item]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][item]</stringProp>
                  <stringProp name="Argument.value">add_to_wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wp-admin/admin-ajax.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OnlineShopping_T03_SelectColourAndSizeAddCart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-190 /wp-admin/admin-ajax.php" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">load_fragments</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8b7efca0cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">context</stringProp>
                  <stringProp name="Argument.value">frontend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][base_url]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][base_url]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][in_default_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][in_default_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][is_single]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][is_single]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_exists]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_exists]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][parent_product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][parent_product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_type]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_type]</stringProp>
                  <stringProp name="Argument.value">variable</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_view]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_view]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][browse_wishlist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][browse_wishlist_text]</stringProp>
                  <stringProp name="Argument.value">Browse Wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][already_in_wishslist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][already_in_wishslist_text]</stringProp>
                  <stringProp name="Argument.value">The product is already in the wishlist!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_added_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][product_added_text]</stringProp>
                  <stringProp name="Argument.value">Product added!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][heading_icon]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][heading_icon]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][available_multi_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][available_multi_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][disable_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][disable_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_count]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][show_count]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][ajax_loading]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][ajax_loading]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][loop_position]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][loop_position]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][item]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1497][item]</stringProp>
                  <stringProp name="Argument.value">add_to_wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wp-admin/admin-ajax.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-191 /wp-admin/admin-ajax.php" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">load_fragments</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8b7efca0cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">context</stringProp>
                  <stringProp name="Argument.value">frontend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][base_url]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][base_url]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][in_default_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][in_default_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][is_single]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][is_single]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_exists]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_exists]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_id]</stringProp>
                  <stringProp name="Argument.value">1498</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][parent_product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][parent_product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_type]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_type]</stringProp>
                  <stringProp name="Argument.value">variable</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_view]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_view]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][browse_wishlist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][browse_wishlist_text]</stringProp>
                  <stringProp name="Argument.value">Browse Wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][already_in_wishslist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][already_in_wishslist_text]</stringProp>
                  <stringProp name="Argument.value">The product is already in the wishlist!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_added_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_added_text]</stringProp>
                  <stringProp name="Argument.value">Product added!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][heading_icon]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][heading_icon]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][available_multi_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][available_multi_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][disable_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][disable_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_count]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_count]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][ajax_loading]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][ajax_loading]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][loop_position]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][loop_position]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][item]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][item]</stringProp>
                  <stringProp name="Argument.value">add_to_wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wp-admin/admin-ajax.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-192 /product/pink-drop-shoulder-oversized-t-shirt/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="attribute_pa_color" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">attribute_pa_color</stringProp>
                  <stringProp name="Argument.value">pink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="attribute_pa_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">attribute_pa_size</stringProp>
                  <stringProp name="Argument.value">36</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quantity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quantity</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="add-to-cart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">add-to-cart</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="product_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">product_id</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="variation_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">variation_id</stringProp>
                  <stringProp name="Argument.value">1498</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-195 /?wc-ajax=get_refreshed_fragments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="time" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">time</stringProp>
                  <stringProp name="Argument.value">1678856473183</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/?wc-ajax=get_refreshed_fragments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-196 /wp-admin/admin-ajax.php" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">load_fragments</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8b7efca0cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">context</stringProp>
                  <stringProp name="Argument.value">frontend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][base_url]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][base_url]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][in_default_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][in_default_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][is_single]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][is_single]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_exists]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_exists]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_id]</stringProp>
                  <stringProp name="Argument.value">1498</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][parent_product_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][parent_product_id]</stringProp>
                  <stringProp name="Argument.value">1497</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_type]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_type]</stringProp>
                  <stringProp name="Argument.value">variable</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_view]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_view]</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][browse_wishlist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][browse_wishlist_text]</stringProp>
                  <stringProp name="Argument.value">Browse Wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][already_in_wishslist_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][already_in_wishslist_text]</stringProp>
                  <stringProp name="Argument.value">The product is already in the wishlist!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_added_text]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][product_added_text]</stringProp>
                  <stringProp name="Argument.value">Product added!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][heading_icon]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][heading_icon]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][available_multi_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][available_multi_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][disable_wishlist]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][disable_wishlist]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_count]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][show_count]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][ajax_loading]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][ajax_loading]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][loop_position]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][loop_position]</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][item]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fragments[yith-wcwl-add-to-wishlist.no-icon.wishlist-fragment.on-first-load.add-to-wishlist-1498][item]</stringProp>
                  <stringProp name="Argument.value">add_to_wishlist</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wp-admin/admin-ajax.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OnlineShopping_T04_ViewCart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-197 /cart/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cart/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/product/pink-drop-shoulder-oversized-t-shirt/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-213 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">push-notification</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">Fp/Cr2SIecHN8+insaXIvA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OnlineShopping_T05_CancelOrder" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-214 /cart/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="empty-cart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">empty-cart</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cart/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/cart/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-215 /?wc-ajax=get_refreshed_fragments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="time" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">time</stringProp>
                  <stringProp name="Argument.value">1678856501452</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">shop.demoqa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/?wc-ajax=get_refreshed_fragments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com/cart/?empty-cart</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://shop.demoqa.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">2</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">OnlineShoppingDemo_recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
